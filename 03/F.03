//#FILE_REGION[ F.03 ]BEG#####################################//

//[F02: DOTADIW: DLL_CALL_CAST (HACK) -----------------------]//
//[ Quick_Hack_For_Calling_DLL_Func_Pointers  ---------------]//

//[XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX]//
//[ Making typedefs and wrappers for function signatures can ]//
//[ get a bit verbose and annoying. When you feel like       ]//
//[ skipping that effort, you can use these hacks depending  ]//
//[ on the number of parameters the function has.            ]//
//[XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX]//

#define  V void* ///////////////////////////////////////////////
#define  a void* ///////////////////////////////////////////////
#define  b void* ///////////////////////////////////////////////
#define  c void* ///////////////////////////////////////////////
#define  d void* ///////////////////////////////////////////////
#define  e void* ///////////////////////////////////////////////

typedef  V (* F03_00)( void );
typedef  V (* F03_01)( a                                      );
typedef  V (* F03_02)( a,a                                    );
typedef  V (* F03_03)( a,a,a                                  );
typedef  V (* F03_04)( a,a,a,a                                );
typedef  V (* F03_05)( a,a,a,a,b                              );
typedef  V (* F03_06)( a,a,a,a,b,b                            );
typedef  V (* F03_07)( a,a,a,a,b,b,b                          );
typedef  V (* F03_08)( a,a,a,a,b,b,b,b                        );
typedef  V (* F03_09)( a,a,a,a,b,b,b,b,c                      );
typedef  V (* F03_10)( a,a,a,a,b,b,b,b,c,c                    );
typedef  V (* F03_11)( a,a,a,a,b,b,b,b,c,c,c                  );
typedef  V (* F03_12)( a,a,a,a,b,b,b,b,c,c,c,c                );
typedef  V (* F03_13)( a,a,a,a,b,b,b,b,c,c,c,c,d              );
typedef  V (* F03_14)( a,a,a,a,b,b,b,b,c,c,c,c,d,d            );
typedef  V (* F03_15)( a,a,a,a,b,b,b,b,c,c,c,c,d,d,d          );
typedef  V (* F03_16)( a,a,a,a,b,b,b,b,c,c,c,c,d,d,d,d        );
typedef  V (* F03_17)( a,a,a,a,b,b,b,b,c,c,c,c,d,d,d,d,e      );
typedef  V (* F03_18)( a,a,a,a,b,b,b,b,c,c,c,c,d,d,d,d,e,e    );
typedef  V (* F03_19)( a,a,a,a,b,b,b,b,c,c,c,c,d,d,d,d,e,e,e  );
typedef  V (* F03_20)( a,a,a,a,b,b,b,b,c,c,c,c,d,d,d,d,e,e,e,e);

#undef   V /////////////////////////////////////////////////////
#undef   a /////////////////////////////////////////////////////
#undef   b /////////////////////////////////////////////////////
#undef   c /////////////////////////////////////////////////////
#undef   d /////////////////////////////////////////////////////
#undef   e /////////////////////////////////////////////////////

//[XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX]//

//:IM:Init_And_Main:
//[IMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIM]//

    int F03_Init(){
        printf("[BEG:F03:Init]\n");

        //:No action besides calling down the chain.

        int ret = F02_Init();

        printf("[END:F03:Init]\n");
        return( ret );
    }//[;]//
    int F03_Main(){
        F03_Init();

        printf("[F03:DLL_CALL_CAST. Nothing_To_Do_Here]\n");

        return( 0 );
    }//[;]//

//[IMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIM]//

//#FILE_REGION[ F.03 ]END#####################################//