//#FILE_REGION[ F.35 ]BEG#####################################//

//:DOTADIW: STRUCTS_W_PFN
//:        ( structs_with_pfn_members )
//:F.35: 
//:      Vulkan Structs that take function pointers as
//:      defined in F.30

struct 
F35_VkDebugUtilsMessengerCreateInfoEXT {

    signed int  /** VkStructureType **/   
    sType;

    const void*                             
    pNext;

    signed int  /** VkDebugUtilsMessengerCreateFlagsEXT **/
    flags;

    signed int  /** VkDebugUtilsMessageSeverityFlagsEXT **/
    messageSeverity;

    signed int  /** VkDebugUtilsMessageTypeFlagsEXT     **/         
    messageType;

    F30_PFN_vkDebugUtilsMessengerCallbackEXT      
    pfnUserCallback;

    void*                                   
    pUserData;

};//[struct]//

//:PROBABLY_COMMENTED_OUT_BECAUSE:
//:1: Don't want to create all of these "PFN_" types.
//:2: Not using allocation callback params of any function
//:   calls at the moment.
//:----------------------------------------------------------://
//       www.khronos.org/registry/vulkan/specs/1.1-extensions
//       /man/html/VkAllocationCallbacks.html
// struct
// F35_VkAllocationCallbacks{
//     
//     void*                                   pUserData;
//     PFN_vkAllocationFunction                pfnAllocation;
//     PFN_vkReallocationFunction              pfnReallocation;
//     PFN_vkFreeFunction                      pfnFree;
//     PFN_vkInternalAllocationNotification    pfnInternalAllocation;
//     PFN_vkInternalFreeNotification          pfnInternalFree;
// 
// };//[struct]//
//:----------------------------------------------------------://


//:HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH://
//:First function always "Halt":
static void 
f35_Halt( const char* msg ){ 
    printf( "[f35_Halt]:%s\n", msg ); 
    fflush(stdout); exit(666);
}//[;]//
//:HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH://

static void
f35_BlowUpIfStructSizesIncorrect( void ){

    int siz;
    siz = (int)sizeof( 
        struct F35_VkDebugUtilsMessengerCreateInfoEXT );;

    if( 48 != siz ){
        f35_Halt("[!48]");
    };;

}//[;]//


//:IM:Init_And_Main:
//[IMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIM]//
    int F35_Init(){
        printf("[BEG:F35:Init]\n");

            //:Call previous initialiers on chain:
            int ret = F30_Init(); //: ".SUPER_CHAIN()"

            f35_BlowUpIfStructSizesIncorrect();

        printf("[END:F35:Init]\n");
        return( ret );
    }//[;]//
    int F35_Main(){
        F35_Init();

            printf("[F35:TO_EXIT:CTRL+C]\n");
            while( 1 ){ }; //:LOOP_FOREVER

        return( 0 );
    }//[;]//

//[IMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIMIM]//

//#FILE_REGION[ F.35 ]END#####################################//